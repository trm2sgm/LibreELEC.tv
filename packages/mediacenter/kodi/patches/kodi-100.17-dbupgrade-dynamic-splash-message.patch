From b52e70802c78370e3092e0994354fdb6d1f11735 Mon Sep 17 00:00:00 2001
From: MilhouseVH <milhouseVH.github@nmacleod.com>
Date: Tue, 18 Oct 2016 11:39:01 +0100
Subject: [PATCH 1/3] Revert "Merge pull request #10560 from
 tamland/splash_text_pt2"

This reverts commit 31886da96cf3bfceaea5f715d38194c23144c981, reversing
changes made to f75cc2c48c5cecbe2820b1dd6a577bae9e2e1e51.
---
 xbmc/Application.cpp                |  5 ++---
 xbmc/addons/AddonSystemSettings.cpp |  4 +---
 xbmc/addons/AddonSystemSettings.h   |  8 ++------
 xbmc/utils/Splash.cpp               | 29 ++++++++++++++++-------------
 4 files changed, 21 insertions(+), 25 deletions(-)

diff --git a/xbmc/Application.cpp b/xbmc/Application.cpp
index 83c79cc..e9281ff 100644
--- a/xbmc/Application.cpp
+++ b/xbmc/Application.cpp
@@ -1138,10 +1138,9 @@ bool CApplication::Initialize()
 
     g_windowManager.CreateWindows();
 
+    CSplash::GetInstance().Show(g_localizeStrings.Get(24151));
     m_confirmSkinChange = false;
-    m_incompatibleAddons = CAddonSystemSettings::GetInstance().MigrateAddons([](){
-      CSplash::GetInstance().Show(g_localizeStrings.Get(24151));
-    });
+    m_incompatibleAddons = CAddonSystemSettings::GetInstance().MigrateAddons();
     m_confirmSkinChange = true;
     CSplash::GetInstance().Show();
 
diff --git a/xbmc/addons/AddonSystemSettings.cpp b/xbmc/addons/AddonSystemSettings.cpp
index 620fcd7..6df9d33 100644
--- a/xbmc/addons/AddonSystemSettings.cpp
+++ b/xbmc/addons/AddonSystemSettings.cpp
@@ -126,7 +126,7 @@ bool CAddonSystemSettings::UnsetActive(const AddonPtr& addon)
 }
 
 
-std::vector<std::string> CAddonSystemSettings::MigrateAddons(std::function<void(void)> onMigrate)
+std::vector<std::string> CAddonSystemSettings::MigrateAddons()
 {
   auto getIncompatible = [](){
     VECADDONS incompatible;
@@ -141,8 +141,6 @@ std::vector<std::string> CAddonSystemSettings::MigrateAddons(std::function<void(
 
   if (CSettings::GetInstance().GetInt(CSettings::SETTING_ADDONS_AUTOUPDATES) == AUTO_UPDATES_ON)
   {
-    onMigrate();
-
     if (CRepositoryUpdater::GetInstance().CheckForUpdates())
       CRepositoryUpdater::GetInstance().Await();
 
diff --git a/xbmc/addons/AddonSystemSettings.h b/xbmc/addons/AddonSystemSettings.h
index 3ecd0ed..f23c9eb 100644
--- a/xbmc/addons/AddonSystemSettings.h
+++ b/xbmc/addons/AddonSystemSettings.h
@@ -21,7 +21,6 @@
 
 #include "addons/IAddon.h"
 #include "settings/lib/ISettingCallback.h"
-#include <functional>
 #include <string>
 
 namespace ADDON
@@ -49,12 +48,9 @@ public:
   bool UnsetActive(const AddonPtr& addon);
 
   /*!
-   * Check compatibility of installed addons and attempt to migrate.
-   *
-   * @param onMigrate Called when a long running migration task takes place.
-   * @return list of addons that was modified.
+   * Attempt to migrate installed addons. Returns a list of addons that was modified.
    */
-  std::vector<std::string> MigrateAddons(std::function<void(void)> onMigrate);
+  std::vector<std::string> MigrateAddons();
 
 private:
   CAddonSystemSettings();
diff --git a/xbmc/utils/Splash.cpp b/xbmc/utils/Splash.cpp
index d7d4812..142278b 100644
--- a/xbmc/utils/Splash.cpp
+++ b/xbmc/utils/Splash.cpp
@@ -46,18 +46,18 @@ void CSplash::Show()
 
 void CSplash::Show(const std::string& message)
 {
-  if (!g_advancedSettings.m_splashImage)
-    return;
-
-  if (!m_image)
+  if (g_advancedSettings.m_splashImage)
   {
-    std::string splashImage = "special://home/media/Splash.png";
-    if (!XFILE::CFile::Exists(splashImage))
-      splashImage = "special://xbmc/media/Splash.png";
+    if (!m_image)
+    {
+      std::string splashImage = "special://home/media/Splash.png";
+      if (!XFILE::CFile::Exists(splashImage))
+        splashImage = "special://xbmc/media/Splash.png";
 
-    m_image = std::unique_ptr<CGUIImage>(new CGUIImage(0, 0, 0, 0, g_graphicsContext.GetWidth(),
-        g_graphicsContext.GetHeight(), CTextureInfo(splashImage)));
-    m_image->SetAspectRatio(CAspectRatio::AR_SCALE);
+      m_image = std::unique_ptr<CGUIImage>(new CGUIImage(0, 0, 0, 0, g_graphicsContext.GetWidth(),
+          g_graphicsContext.GetHeight(), CTextureInfo(splashImage)));
+      m_image->SetAspectRatio(CAspectRatio::AR_SCALE);
+    }
   }
 
   g_graphicsContext.Lock();
@@ -69,9 +69,12 @@ void CSplash::Show(const std::string& message)
   //render splash image
   g_Windowing.BeginRender();
 
-  m_image->AllocResources();
-  m_image->Render();
-  m_image->FreeResources();
+  if (m_image)
+  {
+    m_image->AllocResources();
+    m_image->Render();
+    m_image->FreeResources();
+  }
 
   if (!message.empty())
   {
-- 
2.7.4


From f093d53c68317ba71604d63fe4728bc69a238999 Mon Sep 17 00:00:00 2001
From: MilhouseVH <milhouseVH.github@nmacleod.com>
Date: Tue, 18 Oct 2016 11:39:52 +0100
Subject: [PATCH 2/3] Revert "Merge pull request #10483 from
 tamland/splash_text"

This reverts commit fb04fdf14a710ade1a7ba576a9cbc893aab72468, reversing
changes made to 2a7b5707ac75b85bc300b641d859dbdb861c7d4e.
---
 .../resource.language.en_gb/resources/strings.po   | 14 +----
 xbmc/Application.cpp                               | 20 ++++----
 xbmc/utils/Splash.cpp                              | 60 ++++++----------------
 xbmc/utils/Splash.h                                |  8 +--
 4 files changed, 28 insertions(+), 74 deletions(-)

diff --git a/addons/resource.language.en_gb/resources/strings.po b/addons/resource.language.en_gb/resources/strings.po
index 1d4821c..a64e6c7 100644
--- a/addons/resource.language.en_gb/resources/strings.po
+++ b/addons/resource.language.en_gb/resources/strings.po
@@ -14653,19 +14653,7 @@ msgctxt "#24149"
 msgid "The following add-ons are incompatible with this version of Kodi and have been automatically disabled: %s."
 msgstr ""
 
-#. Progress text on splash screen
-#: xbmc/Application.cpp
-msgctxt "#24150"
-msgid "Database migration in progress - please wait..."
-msgstr ""
-
-#. Progress text on splash screen
-#: xbmc/Application.cpp
-msgctxt "#24151"
-msgid "Add-on migration in progress - please wait..."
-msgstr ""
-
-#empty strings from id 24152 to 24990
+#empty strings from id 24150 to 24990
 
 #. Used as error message in add-on browser when add-on repository data could not be downloaded
 #: xbmc/filesystem/AddonsDirectory.cpp
diff --git a/xbmc/Application.cpp b/xbmc/Application.cpp
index e9281ff..d13216b 100644
--- a/xbmc/Application.cpp
+++ b/xbmc/Application.cpp
@@ -785,7 +785,8 @@ bool CApplication::CreateGUI()
   if (sav_res)
     CDisplaySettings::GetInstance().SetCurrentResolution(RES_DESKTOP, true);
 
-  CSplash::GetInstance().Show();
+  if (g_advancedSettings.m_splashImage)
+    CSplash::GetInstance().Show();
 
   // The key mappings may already have been loaded by a peripheral
   CLog::Log(LOGINFO, "load keymapping");
@@ -1123,9 +1124,7 @@ bool CApplication::Initialize()
   g_curlInterface.Unload();
 
   // initialize (and update as needed) our databases
-  CSplash::GetInstance().Show(g_localizeStrings.Get(24150));
   CDatabaseManager::GetInstance().Initialize();
-  CSplash::GetInstance().Show();
 
   StartServices();
 
@@ -1137,12 +1136,17 @@ bool CApplication::Initialize()
     CSettings::GetInstance().GetSetting(CSettings::SETTING_POWERMANAGEMENT_DISPLAYSOFF)->SetRequirementsMet(m_dpms->IsSupported());
 
     g_windowManager.CreateWindows();
+    /* window id's 3000 - 3100 are reserved for python */
+
+    // initialize splash window after splash screen disappears
+    // because we need a real window in the background which gets
+    // rendered while we load the main window or enter the master lock key
+    if (g_advancedSettings.m_splashImage)
+      g_windowManager.ActivateWindow(WINDOW_SPLASH);
 
-    CSplash::GetInstance().Show(g_localizeStrings.Get(24151));
     m_confirmSkinChange = false;
     m_incompatibleAddons = CAddonSystemSettings::GetInstance().MigrateAddons();
     m_confirmSkinChange = true;
-    CSplash::GetInstance().Show();
 
     std::string defaultSkin = ((const CSettingString*)CSettings::GetInstance().GetSetting(CSettings::SETTING_LOOKANDFEEL_SKIN))->GetDefault();
     if (!LoadSkin(CSettings::GetInstance().GetString(CSettings::SETTING_LOOKANDFEEL_SKIN)))
@@ -1155,12 +1159,6 @@ bool CApplication::Initialize()
       }
     }
 
-    // initialize splash window after splash screen disappears
-    // because we need a real window in the background which gets
-    // rendered while we load the main window or enter the master lock key
-    if (g_advancedSettings.m_splashImage)
-      g_windowManager.ActivateWindow(WINDOW_SPLASH);
-
     if (CSettings::GetInstance().GetBool(CSettings::SETTING_MASTERLOCK_STARTUPLOCK) &&
         CProfilesManager::GetInstance().GetMasterProfile().getLockMode() != LOCK_MODE_EVERYONE &&
        !CProfilesManager::GetInstance().GetMasterProfile().getLockCode().empty())
diff --git a/xbmc/utils/Splash.cpp b/xbmc/utils/Splash.cpp
index 142278b..7e1d885 100644
--- a/xbmc/utils/Splash.cpp
+++ b/xbmc/utils/Splash.cpp
@@ -24,15 +24,21 @@
 #include "guilib/GUILabelControl.h"
 #include "guilib/GUIFontManager.h"
 #include "filesystem/File.h"
-#include "settings/AdvancedSettings.h"
 #include "windowing/WindowingFactory.h"
+#include "log.h"
 
 using namespace XFILE;
 
 CSplash::CSplash()
+  : m_image(nullptr)
 {
 }
 
+CSplash::~CSplash()
+{
+  delete m_image;
+}
+
 CSplash& CSplash::GetInstance()
 {
   static CSplash instance;
@@ -41,23 +47,14 @@ CSplash& CSplash::GetInstance()
 
 void CSplash::Show()
 {
-  Show("");
-}
-
-void CSplash::Show(const std::string& message)
-{
-  if (g_advancedSettings.m_splashImage)
+  if (!m_image)
   {
-    if (!m_image)
-    {
-      std::string splashImage = "special://home/media/Splash.png";
-      if (!XFILE::CFile::Exists(splashImage))
-        splashImage = "special://xbmc/media/Splash.png";
+    std::string splashImage = "special://home/media/Splash.png";
+    if (!XFILE::CFile::Exists(splashImage))
+      splashImage = "special://xbmc/media/Splash.png";
 
-      m_image = std::unique_ptr<CGUIImage>(new CGUIImage(0, 0, 0, 0, g_graphicsContext.GetWidth(),
-          g_graphicsContext.GetHeight(), CTextureInfo(splashImage)));
-      m_image->SetAspectRatio(CAspectRatio::AR_SCALE);
-    }
+    m_image = new CGUIImage(0, 0, 0, 0, g_graphicsContext.GetWidth(), g_graphicsContext.GetHeight(), CTextureInfo(splashImage));
+    m_image->SetAspectRatio(CAspectRatio::AR_SCALE);
   }
 
   g_graphicsContext.Lock();
@@ -69,34 +66,9 @@ void CSplash::Show(const std::string& message)
   //render splash image
   g_Windowing.BeginRender();
 
-  if (m_image)
-  {
-    m_image->AllocResources();
-    m_image->Render();
-    m_image->FreeResources();
-  }
-
-  if (!message.empty())
-  {
-    if (!m_messageLayout)
-    {
-      auto messageFont = g_fontManager.LoadTTF("__splash__", "arial.ttf", 0xFFFFFFFF, 0, 20, FONT_STYLE_NORMAL, false, 1.0f, 1.0f, &res);
-      if (messageFont)
-        m_messageLayout = std::unique_ptr<CGUITextLayout>(new CGUITextLayout(messageFont, true, 0));
-    }
-
-    if (m_messageLayout)
-    {
-      m_messageLayout->Update(message, 1150, false, true);
-      float textWidth, textHeight;
-      m_messageLayout->GetTextExtent(textWidth, textHeight);
-
-      int width = g_graphicsContext.GetWidth();
-      int height = g_graphicsContext.GetHeight();
-      float y = height - textHeight - 30; // -30 for safe viewing area
-      m_messageLayout->RenderOutline(width/2, y, 0, 0xFF000000, XBFONT_CENTER_X, width);
-    }
-  }
+  m_image->AllocResources();
+  m_image->Render();
+  m_image->FreeResources();
 
   //show it on screen
   g_Windowing.EndRender();
diff --git a/xbmc/utils/Splash.h b/xbmc/utils/Splash.h
index 03ade13..d8c81c2 100644
--- a/xbmc/utils/Splash.h
+++ b/xbmc/utils/Splash.h
@@ -20,11 +20,9 @@
  *
  */
 
-#include <memory>
 #include <string>
 
 class CGUIImage;
-class CGUITextLayout;
 
 class CSplash
 {
@@ -32,15 +30,13 @@ public:
   static CSplash& GetInstance();
 
   void Show();
-  void Show(const std::string& message);
 
 protected:
   CSplash();
   CSplash(const CSplash&);
   CSplash& operator=(CSplash const&);
-  virtual ~CSplash() = default;
+  virtual ~CSplash();
 
 private:
-  std::unique_ptr<CGUIImage> m_image;
-  std::unique_ptr<CGUITextLayout> m_messageLayout;
+  CGUIImage* m_image;
 };
-- 
2.7.4


From 5953022977fbf334f91b1d2e7f9adea2fd7f480d Mon Sep 17 00:00:00 2001
From: MilhouseVH <milhouseVH.github@nmacleod.com>
Date: Tue, 18 Oct 2016 11:46:17 +0100
Subject: [PATCH 3/3] kodi: database migration splash text

---
 xbmc/DatabaseManager.cpp     |  6 +++---
 xbmc/DatabaseManager.h       |  4 ++--
 xbmc/dbwrappers/Database.cpp | 11 ++++++++++-
 xbmc/dbwrappers/Database.h   |  4 ++--
 xbmc/utils/Splash.cpp        | 38 +++++++++++++++++++++++++++++++++++++-
 xbmc/utils/Splash.h          |  4 ++++
 6 files changed, 58 insertions(+), 9 deletions(-)

diff --git a/xbmc/DatabaseManager.cpp b/xbmc/DatabaseManager.cpp
index ed0178d..6430252 100644
--- a/xbmc/DatabaseManager.cpp
+++ b/xbmc/DatabaseManager.cpp
@@ -51,7 +51,7 @@ CDatabaseManager::~CDatabaseManager()
 void CDatabaseManager::Initialize(bool addonsOnly)
 {
   Deinitialize();
-  { CAddonDatabase db; UpdateDatabase(db); }
+  { CAddonDatabase db; UpdateDatabase(db, NULL, false); }
   if (addonsOnly)
     return;
   CLog::Log(LOGDEBUG, "%s, updating databases...", __FUNCTION__);
@@ -83,11 +83,11 @@ bool CDatabaseManager::CanOpen(const std::string &name)
   return false; // db isn't even attempted to update yet
 }
 
-void CDatabaseManager::UpdateDatabase(CDatabase &db, DatabaseSettings *settings)
+void CDatabaseManager::UpdateDatabase(CDatabase &db, DatabaseSettings *settings, bool bShowSplash)
 {
   std::string name = db.GetBaseDBName();
   UpdateStatus(name, DB_UPDATING);
-  if (db.Update(settings ? *settings : DatabaseSettings()))
+  if (db.Update(settings ? *settings : DatabaseSettings(), bShowSplash))
     UpdateStatus(name, DB_READY);
   else
     UpdateStatus(name, DB_FAILED);
diff --git a/xbmc/DatabaseManager.h b/xbmc/DatabaseManager.h
index c3bfba5..e75aae0 100644
--- a/xbmc/DatabaseManager.h
+++ b/xbmc/DatabaseManager.h
@@ -61,7 +61,7 @@ public:
 
    \param name the name of the database to check.
    \return true if the database can be opened, false otherwise.
-   */ 
+   */
   bool CanOpen(const std::string &name);
 
 private:
@@ -73,7 +73,7 @@ private:
 
   enum DB_STATUS { DB_CLOSED, DB_UPDATING, DB_READY, DB_FAILED };
   void UpdateStatus(const std::string &name, DB_STATUS status);
-  void UpdateDatabase(CDatabase &db, DatabaseSettings *settings = NULL);
+  void UpdateDatabase(CDatabase &db, DatabaseSettings *settings = NULL, bool bShowSplash = true);
 
   CCriticalSection            m_section;     ///< Critical section protecting m_dbStatus.
   std::map<std::string, DB_STATUS> m_dbStatus;    ///< Our database status map.
diff --git a/xbmc/dbwrappers/Database.cpp b/xbmc/dbwrappers/Database.cpp
index 4dc71c5..6d06e8f 100644
--- a/xbmc/dbwrappers/Database.cpp
+++ b/xbmc/dbwrappers/Database.cpp
@@ -29,6 +29,7 @@
 #include "sqlitedataset.h"
 #include "DatabaseManager.h"
 #include "DbUrl.h"
+#include "utils/Splash.h"
 
 #ifdef HAS_MYSQL
 #include "mysqldataset.h"
@@ -356,7 +357,7 @@ void CDatabase::InitSettings(DatabaseSettings &dbSettings)
     dbSettings.name = GetBaseDBName();
 }
 
-bool CDatabase::Update(const DatabaseSettings &settings)
+bool CDatabase::Update(const DatabaseSettings &settings, bool bShowSplash)
 {
   DatabaseSettings dbSettings = settings;
   InitSettings(dbSettings);
@@ -367,6 +368,7 @@ bool CDatabase::Update(const DatabaseSettings &settings)
 
   while (version >= GetMinSchemaVersion())
   {
+    std::string splashmsg;
     std::string dbName = dbSettings.name;
     if (version)
       dbName += StringUtils::Format("%d", version);
@@ -378,6 +380,13 @@ bool CDatabase::Update(const DatabaseSettings &settings)
       {
         CLog::Log(LOGNOTICE, "Old database found - updating from version %i to %i", version, GetSchemaVersion());
 
+        if (bShowSplash)
+        {
+          splashmsg = "Database migration in progress - please wait...";
+          splashmsg += "\nMigrating database " + dbSettings.name + " from v" + StringUtils::Format("%d", version) + " to v" + StringUtils::Format("%d", GetSchemaVersion());
+          CSplash::GetInstance().Show(splashmsg);
+	    }
+
         bool copy_fail = false;
 
         try
diff --git a/xbmc/dbwrappers/Database.h b/xbmc/dbwrappers/Database.h
index 6370a4e..c59921b 100644
--- a/xbmc/dbwrappers/Database.h
+++ b/xbmc/dbwrappers/Database.h
@@ -42,7 +42,7 @@ public:
     Filter() : fields("*") {};
     Filter(const char *w) : fields("*"), where(w) {};
     Filter(const std::string &w) : fields("*"), where(w) {};
-    
+
     void AppendField(const std::string &strField);
     void AppendJoin(const std::string &strJoin);
     void AppendWhere(const std::string &strWhere, bool combineWithAnd = true);
@@ -157,7 +157,7 @@ public:
 
 protected:
   friend class CDatabaseManager;
-  bool Update(const DatabaseSettings &db);
+  bool Update(const DatabaseSettings &db, bool bShowSplash);
 
   void Split(const std::string& strFileNameAndPath, std::string& strPath, std::string& strFileName);
 
diff --git a/xbmc/utils/Splash.cpp b/xbmc/utils/Splash.cpp
index 7e1d885..c9dd388 100644
--- a/xbmc/utils/Splash.cpp
+++ b/xbmc/utils/Splash.cpp
@@ -30,13 +30,16 @@
 using namespace XFILE;
 
 CSplash::CSplash()
-  : m_image(nullptr)
 {
+  m_messageLayout = NULL;
+  m_image = NULL;
+  m_layoutWasLoading = false;
 }
 
 CSplash::~CSplash()
 {
   delete m_image;
+  delete m_messageLayout;
 }
 
 CSplash& CSplash::GetInstance()
@@ -47,6 +50,11 @@ CSplash& CSplash::GetInstance()
 
 void CSplash::Show()
 {
+  Show("");
+}
+
+void CSplash::Show(const std::string& message)
+{
   if (!m_image)
   {
     std::string splashImage = "special://home/media/Splash.png";
@@ -70,6 +78,34 @@ void CSplash::Show()
   m_image->Render();
   m_image->FreeResources();
 
+  // render message
+  if (!message.empty())
+  {
+    if (!m_layoutWasLoading)
+    {
+      // load arial font, white body, no shadow, size: 20, no additional styling
+      CGUIFont *messageFont = g_fontManager.LoadTTF("__splash__", "arial.ttf", 0xFFFFFFFF, 0, 24, FONT_STYLE_NORMAL, false, 1.25f, 1.0f, &res);
+      if (messageFont)
+        m_messageLayout = new CGUITextLayout(messageFont, true, 0);
+      m_layoutWasLoading = true;
+    }
+    if (m_messageLayout)
+    {
+      m_messageLayout->Update(message, 1150, false, true);
+      float textWidth, textHeight;
+      m_messageLayout->GetTextExtent(textWidth, textHeight);
+
+      int width = g_graphicsContext.GetWidth();
+      int height = g_graphicsContext.GetHeight();
+
+      // ideally place text in center of empty area below splash image
+      float y = m_image->GetTextureHeight() - 180;
+      if (y + textHeight > height) // make sure entire text is visible
+        y = height - textHeight - 30; // -30 for safe viewing area
+      m_messageLayout->RenderOutline(width/2, y, 0, 0xFF000000, XBFONT_CENTER_X, width);
+    }
+  }
+
   //show it on screen
   g_Windowing.EndRender();
   g_graphicsContext.Flip(true, false);
diff --git a/xbmc/utils/Splash.h b/xbmc/utils/Splash.h
index d8c81c2..66fbae0 100644
--- a/xbmc/utils/Splash.h
+++ b/xbmc/utils/Splash.h
@@ -22,6 +22,7 @@
 
 #include <string>
 
+class CGUITextLayout;
 class CGUIImage;
 
 class CSplash
@@ -30,6 +31,7 @@ public:
   static CSplash& GetInstance();
 
   void Show();
+  void Show(const std::string& message);
 
 protected:
   CSplash();
@@ -38,5 +40,7 @@ protected:
   virtual ~CSplash();
 
 private:
+  CGUITextLayout* m_messageLayout;
   CGUIImage* m_image;
+  bool m_layoutWasLoading;
 };
-- 
2.7.4

